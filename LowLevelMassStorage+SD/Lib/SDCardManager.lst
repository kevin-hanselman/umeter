   1               		.file	"SDCardManager.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               		.section	.text.SDCardManager_ReadBlockHandler,"ax",@progbits
  17               	.global	SDCardManager_ReadBlockHandler
  19               	SDCardManager_ReadBlockHandler:
  20               	.LFB41:
  21               	.LSM0:
  22               	.LVL0:
  23 0000 CF93      		push r28
  24 0002 DF93      		push r29
  25               	/* prologue: function */
  26               	/* frame size = 0 */
  27               	/* stack size = 2 */
  28               	.L__stack_usage = 2
  29 0004 EC01      		movw r28,r24
  30               	.LSM1:
  31 0006 8091 E800 		lds r24,232
  32               	.LVL1:
  33 000a 85FD      		sbrc r24,5
  34 000c 00C0      		rjmp .L2
  35               	.LBB68:
  36               	.LSM2:
  37 000e 8091 E800 		lds r24,232
  38               	.LVL2:
  39 0012 982F      		mov r25,r24
  40 0014 9E7F      		andi r25,lo8(-2)
  41 0016 9093 E800 		sts 232,r25
  42 001a 8F77      		andi r24,lo8(127)
  43               	.LVL3:
  44 001c 8093 E800 		sts 232,r24
  45               	.LBE68:
  46               	.LSM3:
  47 0020 0E94 0000 		call Endpoint_WaitUntilReady
  48 0024 8823      		tst r24
  49 0026 01F4      		brne .L4
  50               	.L2:
  51               	.LSM4:
  52 0028 8881      		ld r24,Y
  53               	.LVL4:
  54               	.LBB69:
  55               	.LBB70:
  56               	.LSM5:
  57 002a 8093 F100 		sts 241,r24
  58               	.LBE70:
  59               	.LBE69:
  60               	.LSM6:
  61 002e 8981      		ldd r24,Y+1
  62               	.LVL5:
  63               	.LBB71:
  64               	.LBB72:
  65               	.LSM7:
  66 0030 8093 F100 		sts 241,r24
  67               	.LBE72:
  68               	.LBE71:
  69               	.LSM8:
  70 0034 8A81      		ldd r24,Y+2
  71               	.LVL6:
  72               	.LBB73:
  73               	.LBB74:
  74               	.LSM9:
  75 0036 8093 F100 		sts 241,r24
  76               	.LBE74:
  77               	.LBE73:
  78               	.LSM10:
  79 003a 8B81      		ldd r24,Y+3
  80               	.LVL7:
  81               	.LBB75:
  82               	.LBB76:
  83               	.LSM11:
  84 003c 8093 F100 		sts 241,r24
  85               	.LBE76:
  86               	.LBE75:
  87               	.LSM12:
  88 0040 8C81      		ldd r24,Y+4
  89               	.LVL8:
  90               	.LBB77:
  91               	.LBB78:
  92               	.LSM13:
  93 0042 8093 F100 		sts 241,r24
  94               	.LBE78:
  95               	.LBE77:
  96               	.LSM14:
  97 0046 8D81      		ldd r24,Y+5
  98               	.LVL9:
  99               	.LBB79:
 100               	.LBB80:
 101               	.LSM15:
 102 0048 8093 F100 		sts 241,r24
 103               	.LBE80:
 104               	.LBE79:
 105               	.LSM16:
 106 004c 8E81      		ldd r24,Y+6
 107               	.LVL10:
 108               	.LBB81:
 109               	.LBB82:
 110               	.LSM17:
 111 004e 8093 F100 		sts 241,r24
 112               	.LBE82:
 113               	.LBE81:
 114               	.LSM18:
 115 0052 8F81      		ldd r24,Y+7
 116               	.LVL11:
 117               	.LBB83:
 118               	.LBB84:
 119               	.LSM19:
 120 0054 8093 F100 		sts 241,r24
 121               	.LBE84:
 122               	.LBE83:
 123               	.LSM20:
 124 0058 8885      		ldd r24,Y+8
 125               	.LVL12:
 126               	.LBB85:
 127               	.LBB86:
 128               	.LSM21:
 129 005a 8093 F100 		sts 241,r24
 130               	.LBE86:
 131               	.LBE85:
 132               	.LSM22:
 133 005e 8985      		ldd r24,Y+9
 134               	.LVL13:
 135               	.LBB87:
 136               	.LBB88:
 137               	.LSM23:
 138 0060 8093 F100 		sts 241,r24
 139               	.LBE88:
 140               	.LBE87:
 141               	.LSM24:
 142 0064 8A85      		ldd r24,Y+10
 143               	.LVL14:
 144               	.LBB89:
 145               	.LBB90:
 146               	.LSM25:
 147 0066 8093 F100 		sts 241,r24
 148               	.LBE90:
 149               	.LBE89:
 150               	.LSM26:
 151 006a 8B85      		ldd r24,Y+11
 152               	.LVL15:
 153               	.LBB91:
 154               	.LBB92:
 155               	.LSM27:
 156 006c 8093 F100 		sts 241,r24
 157               	.LBE92:
 158               	.LBE91:
 159               	.LSM28:
 160 0070 8C85      		ldd r24,Y+12
 161               	.LVL16:
 162               	.LBB93:
 163               	.LBB94:
 164               	.LSM29:
 165 0072 8093 F100 		sts 241,r24
 166               	.LBE94:
 167               	.LBE93:
 168               	.LSM30:
 169 0076 8D85      		ldd r24,Y+13
 170               	.LVL17:
 171               	.LBB95:
 172               	.LBB96:
 173               	.LSM31:
 174 0078 8093 F100 		sts 241,r24
 175               	.LBE96:
 176               	.LBE95:
 177               	.LSM32:
 178 007c 8E85      		ldd r24,Y+14
 179               	.LVL18:
 180               	.LBB97:
 181               	.LBB98:
 182               	.LSM33:
 183 007e 8093 F100 		sts 241,r24
 184               	.LBE98:
 185               	.LBE97:
 186               	.LSM34:
 187 0082 8F85      		ldd r24,Y+15
 188               	.LVL19:
 189               	.LBB99:
 190               	.LBB100:
 191               	.LSM35:
 192 0084 8093 F100 		sts 241,r24
 193               	.LBE100:
 194               	.LBE99:
 195               	.LSM36:
 196 0088 8091 0000 		lds r24,IsMassStoreReset
 197               	.LSM37:
 198 008c 91E0      		ldi r25,lo8(1)
 199 008e 8927      		eor r24,r25
 200 0090 00C0      		rjmp .L3
 201               	.LVL20:
 202               	.L4:
 203               	.LSM38:
 204 0092 80E0      		ldi r24,lo8(0)
 205               	.L3:
 206               	/* epilogue start */
 207               	.LSM39:
 208 0094 DF91      		pop r29
 209 0096 CF91      		pop r28
 210               	.LVL21:
 211 0098 0895      		ret
 212               	.LFE41:
 214               		.section	.text.SDCardManager_WriteBlockHandler,"ax",@progbits
 215               	.global	SDCardManager_WriteBlockHandler
 217               	SDCardManager_WriteBlockHandler:
 218               	.LFB39:
 219               	.LSM40:
 220               	.LVL22:
 221 0000 CF93      		push r28
 222 0002 DF93      		push r29
 223               	/* prologue: function */
 224               	/* frame size = 0 */
 225               	/* stack size = 2 */
 226               	.L__stack_usage = 2
 227 0004 EC01      		movw r28,r24
 228               	.LSM41:
 229 0006 8091 E800 		lds r24,232
 230               	.LVL23:
 231 000a 85FD      		sbrc r24,5
 232 000c 00C0      		rjmp .L6
 233               	.LBB101:
 234               	.LSM42:
 235 000e 8091 E800 		lds r24,232
 236               	.LVL24:
 237 0012 982F      		mov r25,r24
 238 0014 9B7F      		andi r25,lo8(-5)
 239 0016 9093 E800 		sts 232,r25
 240 001a 8F77      		andi r24,lo8(127)
 241               	.LVL25:
 242 001c 8093 E800 		sts 232,r24
 243               	.LBE101:
 244               	.LSM43:
 245 0020 0E94 0000 		call Endpoint_WaitUntilReady
 246 0024 8823      		tst r24
 247 0026 01F4      		brne .L8
 248               	.L6:
 249               	.LBB102:
 250               	.LBB103:
 251               	.LSM44:
 252 0028 8091 F100 		lds r24,241
 253               	.LBE103:
 254               	.LBE102:
 255               	.LSM45:
 256 002c 8883      		st Y,r24
 257               	.LBB104:
 258               	.LBB105:
 259               	.LSM46:
 260 002e 8091 F100 		lds r24,241
 261               	.LBE105:
 262               	.LBE104:
 263               	.LSM47:
 264 0032 8983      		std Y+1,r24
 265               	.LBB106:
 266               	.LBB107:
 267               	.LSM48:
 268 0034 8091 F100 		lds r24,241
 269               	.LBE107:
 270               	.LBE106:
 271               	.LSM49:
 272 0038 8A83      		std Y+2,r24
 273               	.LBB108:
 274               	.LBB109:
 275               	.LSM50:
 276 003a 8091 F100 		lds r24,241
 277               	.LBE109:
 278               	.LBE108:
 279               	.LSM51:
 280 003e 8B83      		std Y+3,r24
 281               	.LBB110:
 282               	.LBB111:
 283               	.LSM52:
 284 0040 8091 F100 		lds r24,241
 285               	.LBE111:
 286               	.LBE110:
 287               	.LSM53:
 288 0044 8C83      		std Y+4,r24
 289               	.LBB112:
 290               	.LBB113:
 291               	.LSM54:
 292 0046 8091 F100 		lds r24,241
 293               	.LBE113:
 294               	.LBE112:
 295               	.LSM55:
 296 004a 8D83      		std Y+5,r24
 297               	.LBB114:
 298               	.LBB115:
 299               	.LSM56:
 300 004c 8091 F100 		lds r24,241
 301               	.LBE115:
 302               	.LBE114:
 303               	.LSM57:
 304 0050 8E83      		std Y+6,r24
 305               	.LBB116:
 306               	.LBB117:
 307               	.LSM58:
 308 0052 8091 F100 		lds r24,241
 309               	.LBE117:
 310               	.LBE116:
 311               	.LSM59:
 312 0056 8F83      		std Y+7,r24
 313               	.LBB118:
 314               	.LBB119:
 315               	.LSM60:
 316 0058 8091 F100 		lds r24,241
 317               	.LBE119:
 318               	.LBE118:
 319               	.LSM61:
 320 005c 8887      		std Y+8,r24
 321               	.LBB120:
 322               	.LBB121:
 323               	.LSM62:
 324 005e 8091 F100 		lds r24,241
 325               	.LBE121:
 326               	.LBE120:
 327               	.LSM63:
 328 0062 8987      		std Y+9,r24
 329               	.LBB122:
 330               	.LBB123:
 331               	.LSM64:
 332 0064 8091 F100 		lds r24,241
 333               	.LBE123:
 334               	.LBE122:
 335               	.LSM65:
 336 0068 8A87      		std Y+10,r24
 337               	.LBB124:
 338               	.LBB125:
 339               	.LSM66:
 340 006a 8091 F100 		lds r24,241
 341               	.LBE125:
 342               	.LBE124:
 343               	.LSM67:
 344 006e 8B87      		std Y+11,r24
 345               	.LBB126:
 346               	.LBB127:
 347               	.LSM68:
 348 0070 8091 F100 		lds r24,241
 349               	.LBE127:
 350               	.LBE126:
 351               	.LSM69:
 352 0074 8C87      		std Y+12,r24
 353               	.LBB128:
 354               	.LBB129:
 355               	.LSM70:
 356 0076 8091 F100 		lds r24,241
 357               	.LBE129:
 358               	.LBE128:
 359               	.LSM71:
 360 007a 8D87      		std Y+13,r24
 361               	.LBB130:
 362               	.LBB131:
 363               	.LSM72:
 364 007c 8091 F100 		lds r24,241
 365               	.LBE131:
 366               	.LBE130:
 367               	.LSM73:
 368 0080 8E87      		std Y+14,r24
 369               	.LBB132:
 370               	.LBB133:
 371               	.LSM74:
 372 0082 8091 F100 		lds r24,241
 373               	.LBE133:
 374               	.LBE132:
 375               	.LSM75:
 376 0086 8F87      		std Y+15,r24
 377               	.LSM76:
 378 0088 20E1      		ldi r18,lo8(16)
 379 008a 30E0      		ldi r19,hi8(16)
 380 008c 00C0      		rjmp .L7
 381               	.L8:
 382               	.LSM77:
 383 008e 20E0      		ldi r18,lo8(0)
 384 0090 30E0      		ldi r19,hi8(0)
 385               	.L7:
 386               	.LSM78:
 387 0092 C901      		movw r24,r18
 388               	/* epilogue start */
 389 0094 DF91      		pop r29
 390 0096 CF91      		pop r28
 391               	.LVL26:
 392 0098 0895      		ret
 393               	.LFE39:
 395               		.data
 396               	.LC0:
 397 0000 2F00      		.string	"/"
 398               		.section	.text.SDCardManager_Init,"ax",@progbits
 399               	.global	SDCardManager_Init
 401               	SDCardManager_Init:
 402               	.LFB33:
 403               	.LSM79:
 404 0000 0F93      		push r16
 405 0002 1F93      		push r17
 406 0004 DF93      		push r29
 407 0006 CF93      		push r28
 408 0008 CDB7      		in r28,__SP_L__
 409 000a DEB7      		in r29,__SP_H__
 410 000c E197      		sbiw r28,49
 411 000e 0FB6      		in __tmp_reg__,__SREG__
 412 0010 F894      		cli
 413 0012 DEBF      		out __SP_H__,r29
 414 0014 0FBE      		out __SREG__,__tmp_reg__
 415 0016 CDBF      		out __SP_L__,r28
 416               	/* prologue: function */
 417               	/* frame size = 49 */
 418               	/* stack size = 53 */
 419               	.L__stack_usage = 53
 420               	.LSM80:
 421 0018 00E0      		ldi r16,lo8(__c.2638)
 422 001a 10E0      		ldi r17,hi8(__c.2638)
 423               	.LSM81:
 424 001c 00C0      		rjmp .L10
 425               	.L11:
 426               	.LSM82:
 427 001e 00D0      		rcall .
 428 0020 EDB7      		in r30,__SP_L__
 429 0022 FEB7      		in r31,__SP_H__
 430 0024 1283      		std Z+2,r17
 431 0026 0183      		std Z+1,r16
 432 0028 0E94 0000 		call printf_P
 433 002c 0F90      		pop __tmp_reg__
 434 002e 0F90      		pop __tmp_reg__
 435               	.L10:
 436               	.LSM83:
 437 0030 0E94 0000 		call sd_raw_init
 438 0034 8823      		tst r24
 439 0036 01F0      		breq .L11
 440               	.LSM84:
 441 0038 80E0      		ldi r24,lo8(gs(sd_raw_read))
 442 003a 90E0      		ldi r25,hi8(gs(sd_raw_read))
 443 003c 60E0      		ldi r22,lo8(gs(sd_raw_read_interval))
 444 003e 70E0      		ldi r23,hi8(gs(sd_raw_read_interval))
 445 0040 40E0      		ldi r20,lo8(gs(sd_raw_write))
 446 0042 50E0      		ldi r21,hi8(gs(sd_raw_write))
 447 0044 20E0      		ldi r18,lo8(gs(sd_raw_write_interval))
 448 0046 30E0      		ldi r19,hi8(gs(sd_raw_write_interval))
 449 0048 00E0      		ldi r16,lo8(0)
 450 004a 0E94 0000 		call partition_open
 451               	.LVL27:
 452               	.LSM85:
 453 004e 0097      		sbiw r24,0
 454 0050 01F4      		brne .L12
 455               	.LSM86:
 456 0052 80E0      		ldi r24,lo8(gs(sd_raw_read))
 457 0054 90E0      		ldi r25,hi8(gs(sd_raw_read))
 458               	.LVL28:
 459 0056 60E0      		ldi r22,lo8(gs(sd_raw_read_interval))
 460 0058 70E0      		ldi r23,hi8(gs(sd_raw_read_interval))
 461 005a 40E0      		ldi r20,lo8(gs(sd_raw_write))
 462 005c 50E0      		ldi r21,hi8(gs(sd_raw_write))
 463 005e 20E0      		ldi r18,lo8(gs(sd_raw_write_interval))
 464 0060 30E0      		ldi r19,hi8(gs(sd_raw_write_interval))
 465 0062 0FEF      		ldi r16,lo8(-1)
 466 0064 0E94 0000 		call partition_open
 467               	.LVL29:
 468               	.LSM87:
 469 0068 0097      		sbiw r24,0
 470 006a 01F4      		brne .L12
 471               	.LSM88:
 472 006c 00D0      		rcall .
 473 006e 80E0      		ldi r24,lo8(__c.2644)
 474 0070 90E0      		ldi r25,hi8(__c.2644)
 475               	.LVL30:
 476 0072 00C0      		rjmp .L15
 477               	.LVL31:
 478               	.L12:
 479               	.LSM89:
 480 0074 0E94 0000 		call fat_open
 481               	.LVL32:
 482 0078 9093 0000 		sts fs+1,r25
 483 007c 8093 0000 		sts fs,r24
 484               	.LSM90:
 485 0080 0097      		sbiw r24,0
 486 0082 01F4      		brne .L14
 487               	.LSM91:
 488 0084 00D0      		rcall .
 489 0086 80E0      		ldi r24,lo8(__c.2646)
 490 0088 90E0      		ldi r25,hi8(__c.2646)
 491 008a 00C0      		rjmp .L15
 492               	.L14:
 493               	.LSM92:
 494 008c 60E0      		ldi r22,lo8(.LC0)
 495 008e 70E0      		ldi r23,hi8(.LC0)
 496 0090 8E01      		movw r16,r28
 497 0092 0F5F      		subi r16,lo8(-(1))
 498 0094 1F4F      		sbci r17,hi8(-(1))
 499 0096 A801      		movw r20,r16
 500 0098 0E94 0000 		call fat_get_dir_entry_of_path
 501               	.LSM93:
 502 009c 8091 0000 		lds r24,fs
 503 00a0 9091 0000 		lds r25,fs+1
 504 00a4 B801      		movw r22,r16
 505 00a6 0E94 0000 		call fat_open_dir
 506 00aa 9093 0000 		sts dd+1,r25
 507 00ae 8093 0000 		sts dd,r24
 508               	.LSM94:
 509 00b2 0097      		sbiw r24,0
 510 00b4 01F4      		brne .L9
 511               	.LSM95:
 512 00b6 00D0      		rcall .
 513 00b8 80E0      		ldi r24,lo8(__c.2649)
 514 00ba 90E0      		ldi r25,hi8(__c.2649)
 515               	.L15:
 516 00bc EDB7      		in r30,__SP_L__
 517 00be FEB7      		in r31,__SP_H__
 518 00c0 9283      		std Z+2,r25
 519 00c2 8183      		std Z+1,r24
 520 00c4 0E94 0000 		call printf_P
 521               	.LSM96:
 522 00c8 0F90      		pop __tmp_reg__
 523 00ca 0F90      		pop __tmp_reg__
 524               	.L9:
 525               	/* epilogue start */
 526               	.LSM97:
 527 00cc E196      		adiw r28,49
 528 00ce 0FB6      		in __tmp_reg__,__SREG__
 529 00d0 F894      		cli
 530 00d2 DEBF      		out __SP_H__,r29
 531 00d4 0FBE      		out __SREG__,__tmp_reg__
 532 00d6 CDBF      		out __SP_L__,r28
 533 00d8 CF91      		pop r28
 534 00da DF91      		pop r29
 535 00dc 1F91      		pop r17
 536 00de 0F91      		pop r16
 537 00e0 0895      		ret
 538               	.LFE33:
 540               		.data
 541               	.LC1:
 542 0002 756D 6574 		.string	"umeter.txt"
 542      6572 2E74 
 542      7874 00
 543               		.section	.text.UMeter_Init,"ax",@progbits
 544               	.global	UMeter_Init
 546               	UMeter_Init:
 547               	.LFB34:
 548               	.LSM98:
 549 0000 DF93      		push r29
 550 0002 CF93      		push r28
 551 0004 CDB7      		in r28,__SP_L__
 552 0006 DEB7      		in r29,__SP_H__
 553 0008 E197      		sbiw r28,49
 554 000a 0FB6      		in __tmp_reg__,__SREG__
 555 000c F894      		cli
 556 000e DEBF      		out __SP_H__,r29
 557 0010 0FBE      		out __SREG__,__tmp_reg__
 558 0012 CDBF      		out __SP_L__,r28
 559               	/* prologue: function */
 560               	/* frame size = 49 */
 561               	/* stack size = 51 */
 562               	.L__stack_usage = 51
 563               	.LSM99:
 564 0014 8091 0000 		lds r24,dd
 565 0018 9091 0000 		lds r25,dd+1
 566 001c 60E0      		ldi r22,lo8(.LC1)
 567 001e 70E0      		ldi r23,hi8(.LC1)
 568 0020 AE01      		movw r20,r28
 569 0022 4F5F      		subi r20,lo8(-(1))
 570 0024 5F4F      		sbci r21,hi8(-(1))
 571 0026 0E94 0000 		call fat_create_file
 572 002a 8823      		tst r24
 573 002c 01F4      		brne .L16
 574               	.LSM100:
 575 002e 00D0      		rcall .
 576 0030 80E0      		ldi r24,lo8(__c.2655)
 577 0032 90E0      		ldi r25,hi8(__c.2655)
 578 0034 EDB7      		in r30,__SP_L__
 579 0036 FEB7      		in r31,__SP_H__
 580 0038 9283      		std Z+2,r25
 581 003a 8183      		std Z+1,r24
 582 003c 0E94 0000 		call printf_P
 583 0040 0F90      		pop __tmp_reg__
 584 0042 0F90      		pop __tmp_reg__
 585               	.L16:
 586               	/* epilogue start */
 587               	.LSM101:
 588 0044 E196      		adiw r28,49
 589 0046 0FB6      		in __tmp_reg__,__SREG__
 590 0048 F894      		cli
 591 004a DEBF      		out __SP_H__,r29
 592 004c 0FBE      		out __SREG__,__tmp_reg__
 593 004e CDBF      		out __SP_L__,r28
 594 0050 CF91      		pop r28
 595 0052 DF91      		pop r29
 596 0054 0895      		ret
 597               	.LFE34:
 599               		.data
 600               	.LC2:
 601 000d 7365 6E73 		.string	"sensors = "
 601      6F72 7320 
 601      3D20 00
 602               	.LC3:
 603 0018 2573 5620 		.string	"%sV  "
 603      2000 
 604               	.LC4:
 605 001e 0D00      		.string	"\r"
 606               	.LC5:
 607 0020 0A00      		.string	"\n"
 608               		.section	.text.UMeter_Task,"ax",@progbits
 609               	.global	UMeter_Task
 611               	UMeter_Task:
 612               	.LFB35:
 613               	.LSM102:
 614 0000 8F92      		push r8
 615 0002 9F92      		push r9
 616 0004 AF92      		push r10
 617 0006 BF92      		push r11
 618 0008 CF92      		push r12
 619 000a DF92      		push r13
 620 000c EF92      		push r14
 621 000e FF92      		push r15
 622 0010 0F93      		push r16
 623 0012 1F93      		push r17
 624 0014 DF93      		push r29
 625 0016 CF93      		push r28
 626 0018 CDB7      		in r28,__SP_L__
 627 001a DEB7      		in r29,__SP_H__
 628 001c E997      		sbiw r28,57
 629 001e 0FB6      		in __tmp_reg__,__SREG__
 630 0020 F894      		cli
 631 0022 DEBF      		out __SP_H__,r29
 632 0024 0FBE      		out __SREG__,__tmp_reg__
 633 0026 CDBF      		out __SP_L__,r28
 634               	/* prologue: function */
 635               	/* frame size = 57 */
 636               	/* stack size = 69 */
 637               	.L__stack_usage = 69
 638               	.LSM103:
 639 0028 00D0      		rcall .
 640 002a 80E0      		ldi r24,lo8(__c.2665)
 641 002c 90E0      		ldi r25,hi8(__c.2665)
 642 002e EDB7      		in r30,__SP_L__
 643 0030 FEB7      		in r31,__SP_H__
 644 0032 9283      		std Z+2,r25
 645 0034 8183      		std Z+1,r24
 646 0036 0E94 0000 		call printf_P
 647               	.LSM104:
 648 003a C090 0000 		lds r12,fs
 649 003e D090 0000 		lds r13,fs+1
 650 0042 E090 0000 		lds r14,dd
 651 0046 F090 0000 		lds r15,dd+1
 652               	.LVL33:
 653 004a 0F90      		pop __tmp_reg__
 654 004c 0F90      		pop __tmp_reg__
 655               	.LBB142:
 656               	.LBB143:
 657               	.LBB144:
 658               	.LBB145:
 659               	.LSM105:
 660 004e 8E01      		movw r16,r28
 661 0050 075F      		subi r16,lo8(-(9))
 662 0052 1F4F      		sbci r17,hi8(-(9))
 663 0054 00C0      		rjmp .L19
 664               	.LVL34:
 665               	.L22:
 666               	.LSM106:
 667 0056 C801      		movw r24,r16
 668 0058 60E0      		ldi r22,lo8(.LC1)
 669 005a 70E0      		ldi r23,hi8(.LC1)
 670 005c 0E94 0000 		call strcmp
 671 0060 0097      		sbiw r24,0
 672 0062 01F4      		brne .L19
 673               	.LSM107:
 674 0064 C701      		movw r24,r14
 675 0066 0E94 0000 		call fat_reset_dir
 676               	.LBE145:
 677               	.LBE144:
 678               	.LSM108:
 679 006a C601      		movw r24,r12
 680 006c B801      		movw r22,r16
 681 006e 0E94 0000 		call fat_open_file
 682 0072 7C01      		movw r14,r24
 683               	.LVL35:
 684               	.LBE143:
 685               	.LBE142:
 686               	.LSM109:
 687 0074 0097      		sbiw r24,0
 688 0076 01F4      		brne .L32
 689 0078 00C0      		rjmp .L20
 690               	.LVL36:
 691               	.L19:
 692               	.LBB149:
 693               	.LBB148:
 694               	.LBB147:
 695               	.LBB146:
 696               	.LSM110:
 697 007a C701      		movw r24,r14
 698 007c B801      		movw r22,r16
 699 007e 0E94 0000 		call fat_read_dir
 700 0082 8823      		tst r24
 701 0084 01F4      		brne .L22
 702               	.LVL37:
 703               	.L20:
 704               	.LBE146:
 705               	.LBE147:
 706               	.LBE148:
 707               	.LBE149:
 708               	.LSM111:
 709 0086 00D0      		rcall .
 710 0088 80E0      		ldi r24,lo8(__c.2668)
 711 008a 90E0      		ldi r25,hi8(__c.2668)
 712 008c EDB7      		in r30,__SP_L__
 713 008e FEB7      		in r31,__SP_H__
 714 0090 9283      		std Z+2,r25
 715 0092 8183      		std Z+1,r24
 716 0094 0E94 0000 		call printf_P
 717               	.LSM112:
 718 0098 0F90      		pop __tmp_reg__
 719 009a 0F90      		pop __tmp_reg__
 720 009c 00C0      		rjmp .L18
 721               	.L32:
 722               	.LSM113:
 723 009e 8E01      		movw r16,r28
 724 00a0 0F5F      		subi r16,lo8(-(1))
 725 00a2 1F4F      		sbci r17,hi8(-(1))
 726               	.L28:
 727 00a4 C701      		movw r24,r14
 728 00a6 B801      		movw r22,r16
 729 00a8 48E0      		ldi r20,lo8(8)
 730 00aa 50E0      		ldi r21,hi8(8)
 731 00ac 0E94 0000 		call fat_read_file
 732 00b0 8830      		cpi r24,8
 733 00b2 9105      		cpc r25,__zero_reg__
 734 00b4 01F0      		breq .L28
 735               	.LSM114:
 736 00b6 00D0      		rcall .
 737 00b8 80E0      		ldi r24,lo8(.LC2)
 738 00ba 90E0      		ldi r25,hi8(.LC2)
 739 00bc EDB7      		in r30,__SP_L__
 740 00be FEB7      		in r31,__SP_H__
 741 00c0 9283      		std Z+2,r25
 742 00c2 8183      		std Z+1,r24
 743 00c4 0E94 0000 		call printf
 744               	.LVL38:
 745 00c8 0F90      		pop __tmp_reg__
 746 00ca 0F90      		pop __tmp_reg__
 747               	.LSM115:
 748 00cc 91E0      		ldi r25,lo8(1)
 749 00ce C92E      		mov r12,r25
 750 00d0 D12C      		mov r13,__zero_reg__
 751               	.LVL39:
 752               	.LSM116:
 753 00d2 5E01      		movw r10,r28
 754 00d4 0894      		sec
 755 00d6 A11C      		adc r10,__zero_reg__
 756 00d8 B11C      		adc r11,__zero_reg__
 757               	.LSM117:
 758 00da 80E0      		ldi r24,lo8(.LC3)
 759 00dc 882E      		mov r8,r24
 760 00de 80E0      		ldi r24,hi8(.LC3)
 761 00e0 982E      		mov r9,r24
 762               	.LVL40:
 763               	.L26:
 764               	.LSM118:
 765 00e2 C601      		movw r24,r12
 766 00e4 0E94 0000 		call select_sensor
 767               	.LSM119:
 768 00e8 0E94 0000 		call adc_conversion
 769               	.LVL41:
 770               	.LSM120:
 771 00ec BC01      		movw r22,r24
 772 00ee 80E0      		ldi r24,lo8(0)
 773 00f0 90E0      		ldi r25,hi8(0)
 774               	.LVL42:
 775 00f2 0E94 0000 		call __floatunsisf
 776               	.LVL43:
 777 00f6 2AE0      		ldi r18,lo8(0x4023d70a)
 778 00f8 37ED      		ldi r19,hi8(0x4023d70a)
 779 00fa 43E2      		ldi r20,hlo8(0x4023d70a)
 780 00fc 50E4      		ldi r21,hhi8(0x4023d70a)
 781 00fe 0E94 0000 		call __mulsf3
 782 0102 20E0      		ldi r18,lo8(0x447fc000)
 783 0104 30EC      		ldi r19,hi8(0x447fc000)
 784 0106 4FE7      		ldi r20,hlo8(0x447fc000)
 785 0108 54E4      		ldi r21,hhi8(0x447fc000)
 786 010a 0E94 0000 		call __divsf3
 787 010e 9B01      		movw r18,r22
 788 0110 AC01      		movw r20,r24
 789 0112 0E94 0000 		call __addsf3
 790               	.LSM121:
 791 0116 A501      		movw r20,r10
 792 0118 0E94 0000 		call float2str
 793 011c 8C01      		movw r16,r24
 794               	.LVL44:
 795               	.LSM122:
 796 011e 00D0      		rcall .
 797 0120 00D0      		rcall .
 798 0122 EDB7      		in r30,__SP_L__
 799 0124 FEB7      		in r31,__SP_H__
 800 0126 9282      		std Z+2,r9
 801 0128 8182      		std Z+1,r8
 802 012a B482      		std Z+4,r11
 803 012c A382      		std Z+3,r10
 804 012e 0E94 0000 		call printf
 805               	.LVL45:
 806               	.LSM123:
 807 0132 0F90      		pop __tmp_reg__
 808 0134 0F90      		pop __tmp_reg__
 809 0136 0F90      		pop __tmp_reg__
 810 0138 0F90      		pop __tmp_reg__
 811 013a C701      		movw r24,r14
 812 013c B501      		movw r22,r10
 813 013e A801      		movw r20,r16
 814 0140 0E94 0000 		call fat_write_file
 815 0144 8017      		cp r24,r16
 816 0146 9107      		cpc r25,r17
 817 0148 01F0      		breq .L24
 818               	.LSM124:
 819 014a 00D0      		rcall .
 820 014c 80E0      		ldi r24,lo8(__c.2673)
 821 014e 90E0      		ldi r25,hi8(__c.2673)
 822 0150 EDB7      		in r30,__SP_L__
 823 0152 FEB7      		in r31,__SP_H__
 824 0154 9283      		std Z+2,r25
 825 0156 8183      		std Z+1,r24
 826 0158 0E94 0000 		call printf_P
 827               	.LSM125:
 828 015c 0F90      		pop __tmp_reg__
 829 015e 0F90      		pop __tmp_reg__
 830 0160 00C0      		rjmp .L25
 831               	.L24:
 832               	.LSM126:
 833 0162 0894      		sec
 834 0164 C11C      		adc r12,__zero_reg__
 835 0166 D11C      		adc r13,__zero_reg__
 836               	.LVL46:
 837 0168 F5E0      		ldi r31,lo8(5)
 838 016a CF16      		cp r12,r31
 839 016c D104      		cpc r13,__zero_reg__
 840 016e 01F0      		breq .+2
 841 0170 00C0      		rjmp .L26
 842               	.LVL47:
 843               	.L25:
 844               	.LSM127:
 845 0172 80E0      		ldi r24,lo8(.LC4)
 846 0174 90E0      		ldi r25,hi8(.LC4)
 847 0176 0E94 0000 		call puts
 848               	.LSM128:
 849 017a C701      		movw r24,r14
 850 017c 60E0      		ldi r22,lo8(.LC5)
 851 017e 70E0      		ldi r23,hi8(.LC5)
 852 0180 41E0      		ldi r20,lo8(1)
 853 0182 50E0      		ldi r21,hi8(1)
 854 0184 0E94 0000 		call fat_write_file
 855 0188 8130      		cpi r24,1
 856 018a 9105      		cpc r25,__zero_reg__
 857 018c 01F0      		breq .L27
 858               	.LSM129:
 859 018e 00D0      		rcall .
 860 0190 80E0      		ldi r24,lo8(__c.2678)
 861 0192 90E0      		ldi r25,hi8(__c.2678)
 862 0194 EDB7      		in r30,__SP_L__
 863 0196 FEB7      		in r31,__SP_H__
 864 0198 9283      		std Z+2,r25
 865 019a 8183      		std Z+1,r24
 866 019c 0E94 0000 		call printf_P
 867 01a0 0F90      		pop __tmp_reg__
 868 01a2 0F90      		pop __tmp_reg__
 869               	.L27:
 870               	.LSM130:
 871 01a4 C701      		movw r24,r14
 872 01a6 0E94 0000 		call fat_close_file
 873               	.LVL48:
 874               	.L18:
 875               	/* epilogue start */
 876               	.LSM131:
 877 01aa E996      		adiw r28,57
 878 01ac 0FB6      		in __tmp_reg__,__SREG__
 879 01ae F894      		cli
 880 01b0 DEBF      		out __SP_H__,r29
 881 01b2 0FBE      		out __SREG__,__tmp_reg__
 882 01b4 CDBF      		out __SP_L__,r28
 883 01b6 CF91      		pop r28
 884 01b8 DF91      		pop r29
 885 01ba 1F91      		pop r17
 886 01bc 0F91      		pop r16
 887 01be FF90      		pop r15
 888 01c0 EF90      		pop r14
 889 01c2 DF90      		pop r13
 890 01c4 CF90      		pop r12
 891 01c6 BF90      		pop r11
 892 01c8 AF90      		pop r10
 893 01ca 9F90      		pop r9
 894 01cc 8F90      		pop r8
 895 01ce 0895      		ret
 896               	.LFE35:
 898               		.section	.text.SDCardManager_GetNbBlocks,"ax",@progbits
 899               	.global	SDCardManager_GetNbBlocks
 901               	SDCardManager_GetNbBlocks:
 902               	.LFB38:
 903               	.LSM132:
 904 0000 EF92      		push r14
 905 0002 FF92      		push r15
 906 0004 0F93      		push r16
 907 0006 1F93      		push r17
 908               	/* prologue: function */
 909               	/* frame size = 0 */
 910               	/* stack size = 4 */
 911               	.L__stack_usage = 4
 912               	.LVL49:
 913               	.LSM133:
 914 0008 E090 0000 		lds r14,CachedTotalBlocks
 915 000c F090 0000 		lds r15,CachedTotalBlocks+1
 916 0010 0091 0000 		lds r16,CachedTotalBlocks+2
 917 0014 1091 0000 		lds r17,CachedTotalBlocks+3
 918 0018 E114      		cp r14,__zero_reg__
 919 001a F104      		cpc r15,__zero_reg__
 920 001c 0105      		cpc r16,__zero_reg__
 921 001e 1105      		cpc r17,__zero_reg__
 922 0020 01F4      		brne .L34
 923               	.LSM134:
 924 0022 80E0      		ldi r24,lo8(disk_info)
 925 0024 90E0      		ldi r25,hi8(disk_info)
 926 0026 0E94 0000 		call sd_raw_get_info
 927 002a 8823      		tst r24
 928 002c 01F4      		brne .L35
 929               	.LSM135:
 930 002e 00D0      		rcall .
 931 0030 80E0      		ldi r24,lo8(__c.2699)
 932 0032 90E0      		ldi r25,hi8(__c.2699)
 933 0034 EDB7      		in r30,__SP_L__
 934 0036 FEB7      		in r31,__SP_H__
 935 0038 9283      		std Z+2,r25
 936 003a 8183      		std Z+1,r24
 937 003c 0E94 0000 		call printf_P
 938               	.LSM136:
 939 0040 0F90      		pop __tmp_reg__
 940 0042 0F90      		pop __tmp_reg__
 941 0044 00C0      		rjmp .L34
 942               	.L35:
 943               	.LSM137:
 944 0046 2091 0000 		lds r18,disk_info+17
 945 004a 3091 0000 		lds r19,disk_info+18
 946 004e 4091 0000 		lds r20,disk_info+19
 947 0052 5091 0000 		lds r21,disk_info+20
 948 0056 6091 0000 		lds r22,disk_info+21
 949 005a 7091 0000 		lds r23,disk_info+22
 950 005e 8091 0000 		lds r24,disk_info+23
 951 0062 9091 0000 		lds r25,disk_info+24
 952 0066 09E0      		ldi r16,lo8(9)
 953 0068 0E94 0000 		call __lshrdi3
 954 006c E22E      		mov r14,r18
 955 006e F32E      		mov r15,r19
 956 0070 042F      		mov r16,r20
 957 0072 152F      		mov r17,r21
 958 0074 E092 0000 		sts CachedTotalBlocks,r14
 959 0078 F092 0000 		sts CachedTotalBlocks+1,r15
 960 007c 0093 0000 		sts CachedTotalBlocks+2,r16
 961 0080 1093 0000 		sts CachedTotalBlocks+3,r17
 962               	.L34:
 963               	.LSM138:
 964 0084 B701      		movw r22,r14
 965 0086 C801      		movw r24,r16
 966               	/* epilogue start */
 967 0088 1F91      		pop r17
 968 008a 0F91      		pop r16
 969 008c FF90      		pop r15
 970 008e EF90      		pop r14
 971 0090 0895      		ret
 972               	.LFE38:
 974               		.section	.text.SDCardManager_WriteBlocks,"ax",@progbits
 975               	.global	SDCardManager_WriteBlocks
 977               	SDCardManager_WriteBlocks:
 978               	.LFB40:
 979               	.LSM139:
 980               	.LVL50:
 981 0000 6F92      		push r6
 982 0002 7F92      		push r7
 983 0004 8F92      		push r8
 984 0006 9F92      		push r9
 985 0008 AF92      		push r10
 986 000a BF92      		push r11
 987 000c CF92      		push r12
 988 000e DF92      		push r13
 989 0010 EF92      		push r14
 990 0012 FF92      		push r15
 991 0014 0F93      		push r16
 992 0016 1F93      		push r17
 993 0018 CF93      		push r28
 994 001a DF93      		push r29
 995               	/* prologue: function */
 996               	/* frame size = 0 */
 997               	/* stack size = 14 */
 998               	.L__stack_usage = 14
 999 001c 5B01      		movw r10,r22
 1000 001e 6C01      		movw r12,r24
 1001 0020 EA01      		movw r28,r20
 1002               	.LVL51:
 1003               	.LSM140:
 1004 0022 2DB7      		in r18,__SP_L__
 1005 0024 3EB7      		in r19,__SP_H__
 1006 0026 2850      		subi r18,lo8(-(-8))
 1007 0028 3040      		sbci r19,hi8(-(-8))
 1008 002a 0FB6      		in __tmp_reg__,__SREG__
 1009 002c F894      		cli
 1010 002e 3EBF      		out __SP_H__,r19
 1011 0030 0FBE      		out __SREG__,__tmp_reg__
 1012 0032 2DBF      		out __SP_L__,r18
 1013 0034 EDB7      		in r30,__SP_L__
 1014 0036 FEB7      		in r31,__SP_H__
 1015 0038 3196      		adiw r30,1
 1016 003a 80E0      		ldi r24,lo8(__c.2712)
 1017 003c 90E0      		ldi r25,hi8(__c.2712)
 1018 003e ADB7      		in r26,__SP_L__
 1019 0040 BEB7      		in r27,__SP_H__
 1020 0042 1296      		adiw r26,1+1
 1021 0044 9C93      		st X,r25
 1022 0046 8E93      		st -X,r24
 1023 0048 1197      		sbiw r26,1
 1024 004a A282      		std Z+2,r10
 1025 004c B382      		std Z+3,r11
 1026 004e C482      		std Z+4,r12
 1027 0050 D582      		std Z+5,r13
 1028 0052 5783      		std Z+7,r21
 1029 0054 4683      		std Z+6,r20
 1030 0056 0E94 0000 		call printf_P
 1031               	.LVL52:
 1032               	.LSM141:
 1033 005a 2DB7      		in r18,__SP_L__
 1034 005c 3EB7      		in r19,__SP_H__
 1035 005e 285F      		subi r18,lo8(-(8))
 1036 0060 3F4F      		sbci r19,hi8(-(8))
 1037 0062 0FB6      		in __tmp_reg__,__SREG__
 1038 0064 F894      		cli
 1039 0066 3EBF      		out __SP_H__,r19
 1040 0068 0FBE      		out __SREG__,__tmp_reg__
 1041 006a 2DBF      		out __SP_L__,r18
 1042 006c 0E94 0000 		call Endpoint_WaitUntilReady
 1043 0070 8823      		tst r24
 1044 0072 01F4      		brne .L36
 1045 0074 3501      		movw r6,r10
 1046 0076 4601      		movw r8,r12
 1047 0078 A9E0      		ldi r26,9
 1048 007a 660C      	1:	lsl r6
 1049 007c 771C      		rol r7
 1050 007e 881C      		rol r8
 1051 0080 991C      		rol r9
 1052 0082 AA95      		dec r26
 1053 0084 01F4      		brne 1b
 1054 0086 00C0      		rjmp .L38
 1055               	.LVL53:
 1056               	.L39:
 1057               	.LSM142:
 1058 0088 6401      		movw r12,r8
 1059 008a 5301      		movw r10,r6
 1060 008c 9301      		movw r18,r6
 1061 008e A601      		movw r20,r12
 1062 0090 60E0      		ldi r22,lo8(0)
 1063 0092 70E0      		ldi r23,lo8(0)
 1064 0094 80E0      		ldi r24,lo8(0)
 1065 0096 90E0      		ldi r25,lo8(0)
 1066 0098 00E0      		ldi r16,lo8(Buffer)
 1067 009a 10E0      		ldi r17,hi8(Buffer)
 1068 009c E12C      		mov r14,__zero_reg__
 1069 009e F2E0      		ldi r31,hi8(512)
 1070 00a0 FF2E      		mov r15,r31
 1071 00a2 E0E0      		ldi r30,lo8(gs(SDCardManager_WriteBlockHandler))
 1072 00a4 CE2E      		mov r12,r30
 1073 00a6 E0E0      		ldi r30,hi8(gs(SDCardManager_WriteBlockHandler))
 1074 00a8 DE2E      		mov r13,r30
 1075 00aa AA24      		clr r10
 1076 00ac BB24      		clr r11
 1077 00ae 0E94 0000 		call sd_raw_write_interval
 1078               	.LSM143:
 1079 00b2 8091 0000 		lds r24,IsMassStoreReset
 1080 00b6 20E0      		ldi r18,lo8(512)
 1081 00b8 32E0      		ldi r19,hi8(512)
 1082 00ba 40E0      		ldi r20,hlo8(512)
 1083 00bc 50E0      		ldi r21,hhi8(512)
 1084 00be 620E      		add r6,r18
 1085 00c0 731E      		adc r7,r19
 1086 00c2 841E      		adc r8,r20
 1087 00c4 951E      		adc r9,r21
 1088 00c6 8823      		tst r24
 1089 00c8 01F4      		brne .L36
 1090               	.LSM144:
 1091 00ca 2197      		sbiw r28,1
 1092               	.LVL54:
 1093               	.L38:
 1094               	.LSM145:
 1095 00cc 2097      		sbiw r28,0
 1096 00ce 01F4      		brne .L39
 1097               	.LSM146:
 1098 00d0 8091 E800 		lds r24,232
 1099 00d4 85FD      		sbrc r24,5
 1100 00d6 00C0      		rjmp .L36
 1101               	.LBB150:
 1102               	.LSM147:
 1103 00d8 8091 E800 		lds r24,232
 1104               	.LVL55:
 1105 00dc 982F      		mov r25,r24
 1106 00de 9B7F      		andi r25,lo8(-5)
 1107 00e0 9093 E800 		sts 232,r25
 1108 00e4 8F77      		andi r24,lo8(127)
 1109               	.LVL56:
 1110 00e6 8093 E800 		sts 232,r24
 1111               	.L36:
 1112               	/* epilogue start */
 1113               	.LBE150:
 1114               	.LSM148:
 1115 00ea DF91      		pop r29
 1116 00ec CF91      		pop r28
 1117               	.LVL57:
 1118 00ee 1F91      		pop r17
 1119 00f0 0F91      		pop r16
 1120 00f2 FF90      		pop r15
 1121 00f4 EF90      		pop r14
 1122 00f6 DF90      		pop r13
 1123 00f8 CF90      		pop r12
 1124 00fa BF90      		pop r11
 1125 00fc AF90      		pop r10
 1126 00fe 9F90      		pop r9
 1127 0100 8F90      		pop r8
 1128 0102 7F90      		pop r7
 1129 0104 6F90      		pop r6
 1130 0106 0895      		ret
 1131               	.LFE40:
 1133               		.section	.text.SDCardManager_ReadBlocks,"ax",@progbits
 1134               	.global	SDCardManager_ReadBlocks
 1136               	SDCardManager_ReadBlocks:
 1137               	.LFB42:
 1138               	.LSM149:
 1139               	.LVL58:
 1140 0000 4F92      		push r4
 1141 0002 5F92      		push r5
 1142 0004 6F92      		push r6
 1143 0006 7F92      		push r7
 1144 0008 8F92      		push r8
 1145 000a 9F92      		push r9
 1146 000c AF92      		push r10
 1147 000e BF92      		push r11
 1148 0010 CF92      		push r12
 1149 0012 DF92      		push r13
 1150 0014 EF92      		push r14
 1151 0016 FF92      		push r15
 1152 0018 0F93      		push r16
 1153 001a 1F93      		push r17
 1154 001c CF93      		push r28
 1155 001e DF93      		push r29
 1156               	/* prologue: function */
 1157               	/* frame size = 0 */
 1158               	/* stack size = 16 */
 1159               	.L__stack_usage = 16
 1160 0020 5B01      		movw r10,r22
 1161 0022 6C01      		movw r12,r24
 1162 0024 EA01      		movw r28,r20
 1163               	.LVL59:
 1164               	.LSM150:
 1165 0026 8DB7      		in r24,__SP_L__
 1166 0028 9EB7      		in r25,__SP_H__
 1167 002a 0897      		sbiw r24,8
 1168 002c 0FB6      		in __tmp_reg__,__SREG__
 1169 002e F894      		cli
 1170 0030 9EBF      		out __SP_H__,r25
 1171 0032 0FBE      		out __SREG__,__tmp_reg__
 1172 0034 8DBF      		out __SP_L__,r24
 1173 0036 EDB7      		in r30,__SP_L__
 1174 0038 FEB7      		in r31,__SP_H__
 1175 003a 3196      		adiw r30,1
 1176 003c 80E0      		ldi r24,lo8(__c.2731)
 1177 003e 90E0      		ldi r25,hi8(__c.2731)
 1178 0040 ADB7      		in r26,__SP_L__
 1179 0042 BEB7      		in r27,__SP_H__
 1180 0044 1296      		adiw r26,1+1
 1181 0046 9C93      		st X,r25
 1182 0048 8E93      		st -X,r24
 1183 004a 1197      		sbiw r26,1
 1184 004c A282      		std Z+2,r10
 1185 004e B382      		std Z+3,r11
 1186 0050 C482      		std Z+4,r12
 1187 0052 D582      		std Z+5,r13
 1188 0054 5783      		std Z+7,r21
 1189 0056 4683      		std Z+6,r20
 1190 0058 0E94 0000 		call printf_P
 1191               	.LVL60:
 1192               	.LSM151:
 1193 005c 8DB7      		in r24,__SP_L__
 1194 005e 9EB7      		in r25,__SP_H__
 1195 0060 0896      		adiw r24,8
 1196 0062 0FB6      		in __tmp_reg__,__SREG__
 1197 0064 F894      		cli
 1198 0066 9EBF      		out __SP_H__,r25
 1199 0068 0FBE      		out __SREG__,__tmp_reg__
 1200 006a 8DBF      		out __SP_L__,r24
 1201 006c 0E94 0000 		call Endpoint_WaitUntilReady
 1202 0070 8823      		tst r24
 1203 0072 01F4      		brne .L40
 1204 0074 2501      		movw r4,r10
 1205 0076 3601      		movw r6,r12
 1206 0078 A9E0      		ldi r26,9
 1207 007a 440C      	1:	lsl r4
 1208 007c 551C      		rol r5
 1209 007e 661C      		rol r6
 1210 0080 771C      		rol r7
 1211 0082 AA95      		dec r26
 1212 0084 01F4      		brne 1b
 1213 0086 00C0      		rjmp .L42
 1214               	.LVL61:
 1215               	.L43:
 1216               	.LSM152:
 1217 0088 6301      		movw r12,r6
 1218 008a 5201      		movw r10,r4
 1219 008c 9201      		movw r18,r4
 1220 008e A601      		movw r20,r12
 1221 0090 60E0      		ldi r22,lo8(0)
 1222 0092 70E0      		ldi r23,lo8(0)
 1223 0094 80E0      		ldi r24,lo8(0)
 1224 0096 90E0      		ldi r25,lo8(0)
 1225 0098 00E0      		ldi r16,lo8(Buffer)
 1226 009a 10E0      		ldi r17,hi8(Buffer)
 1227 009c F0E1      		ldi r31,lo8(16)
 1228 009e EF2E      		mov r14,r31
 1229 00a0 F12C      		mov r15,__zero_reg__
 1230 00a2 C12C      		mov r12,__zero_reg__
 1231 00a4 E2E0      		ldi r30,hi8(512)
 1232 00a6 DE2E      		mov r13,r30
 1233 00a8 B0E0      		ldi r27,lo8(gs(SDCardManager_ReadBlockHandler))
 1234 00aa AB2E      		mov r10,r27
 1235 00ac B0E0      		ldi r27,hi8(gs(SDCardManager_ReadBlockHandler))
 1236 00ae BB2E      		mov r11,r27
 1237 00b0 8824      		clr r8
 1238 00b2 9924      		clr r9
 1239 00b4 0E94 0000 		call sd_raw_read_interval
 1240               	.LSM153:
 1241 00b8 2197      		sbiw r28,1
 1242               	.LVL62:
 1243 00ba 80E0      		ldi r24,lo8(512)
 1244 00bc 92E0      		ldi r25,hi8(512)
 1245 00be A0E0      		ldi r26,hlo8(512)
 1246 00c0 B0E0      		ldi r27,hhi8(512)
 1247 00c2 480E      		add r4,r24
 1248 00c4 591E      		adc r5,r25
 1249 00c6 6A1E      		adc r6,r26
 1250 00c8 7B1E      		adc r7,r27
 1251               	.L42:
 1252               	.LSM154:
 1253 00ca 2097      		sbiw r28,0
 1254 00cc 01F4      		brne .L43
 1255               	.LSM155:
 1256 00ce 8091 E800 		lds r24,232
 1257 00d2 85FD      		sbrc r24,5
 1258 00d4 00C0      		rjmp .L40
 1259               	.LBB151:
 1260               	.LSM156:
 1261 00d6 8091 E800 		lds r24,232
 1262               	.LVL63:
 1263 00da 982F      		mov r25,r24
 1264 00dc 9E7F      		andi r25,lo8(-2)
 1265 00de 9093 E800 		sts 232,r25
 1266 00e2 8F77      		andi r24,lo8(127)
 1267               	.LVL64:
 1268 00e4 8093 E800 		sts 232,r24
 1269               	.L40:
 1270               	/* epilogue start */
 1271               	.LBE151:
 1272               	.LSM157:
 1273 00e8 DF91      		pop r29
 1274 00ea CF91      		pop r28
 1275               	.LVL65:
 1276 00ec 1F91      		pop r17
 1277 00ee 0F91      		pop r16
 1278 00f0 FF90      		pop r15
 1279 00f2 EF90      		pop r14
 1280 00f4 DF90      		pop r13
 1281 00f6 CF90      		pop r12
 1282 00f8 BF90      		pop r11
 1283 00fa AF90      		pop r10
 1284 00fc 9F90      		pop r9
 1285 00fe 8F90      		pop r8
 1286 0100 7F90      		pop r7
 1287 0102 6F90      		pop r6
 1288 0104 5F90      		pop r5
 1289 0106 4F90      		pop r4
 1290 0108 0895      		ret
 1291               	.LFE42:
 1293               		.section	.text.SDCardManager_CheckDataflashOperation,"ax",@progbits
 1294               	.global	SDCardManager_CheckDataflashOperation
 1296               	SDCardManager_CheckDataflashOperation:
 1297               	.LFB43:
 1298               	.LSM158:
 1299               	/* prologue: function */
 1300               	/* frame size = 0 */
 1301               	/* stack size = 0 */
 1302               	.L__stack_usage = 0
 1303               	.LSM159:
 1304 0000 81E0      		ldi r24,lo8(1)
 1305               	/* epilogue start */
 1306 0002 0895      		ret
 1307               	.LFE43:
 1309               		.lcomm Buffer,16
 1310               		.section	.progmem.data,"a",@progbits
 1313               	__c.2731:
 1314 0000 5220 256C 		.string	"R %li %i\r\n"
 1314      6920 2569 
 1314      0D0A 00
 1317               	__c.2712:
 1318 000b 5720 256C 		.string	"W %li %i\r\n"
 1318      6920 2569 
 1318      0D0A 00
 1319               		.lcomm CachedTotalBlocks,4
 1320               		.lcomm disk_info,29
 1323               	__c.2699:
 1324 0016 4572 726F 		.string	"Error reading SD card info\r\n"
 1324      7220 7265 
 1324      6164 696E 
 1324      6720 5344 
 1324      2063 6172 
 1325               		.lcomm fs,2
 1326               		.lcomm dd,2
 1329               	__c.2678:
 1330 0033 6572 726F 		.string	"error writing to file\r\n"
 1330      7220 7772 
 1330      6974 696E 
 1330      6720 746F 
 1330      2066 696C 
 1333               	__c.2673:
 1334 004b 6572 726F 		.string	"error writing to file\r\n"
 1334      7220 7772 
 1334      6974 696E 
 1334      6720 746F 
 1334      2066 696C 
 1337               	__c.2668:
 1338 0063 6572 726F 		.string	"error opening file\r\n"
 1338      7220 6F70 
 1338      656E 696E 
 1338      6720 6669 
 1338      6C65 0D0A 
 1341               	__c.2665:
 1342 0078 7772 6974 		.string	"writing...\r\n"
 1342      696E 672E 
 1342      2E2E 0D0A 
 1342      00
 1345               	__c.2655:
 1346 0085 6572 726F 		.string	"error creating file\r\n"
 1346      7220 6372 
 1346      6561 7469 
 1346      6E67 2066 
 1346      696C 650D 
 1349               	__c.2649:
 1350 009b 6F70 656E 		.string	"opening root directory failed\r\n"
 1350      696E 6720 
 1350      726F 6F74 
 1350      2064 6972 
 1350      6563 746F 
 1353               	__c.2646:
 1354 00bb 6F70 656E 		.string	"opening filesystem failed\r\n"
 1354      696E 6720 
 1354      6669 6C65 
 1354      7379 7374 
 1354      656D 2066 
 1357               	__c.2644:
 1358 00d7 6F70 656E 		.string	"opening partition failed\r\n"
 1358      696E 6720 
 1358      7061 7274 
 1358      6974 696F 
 1358      6E20 6661 
 1361               	__c.2638:
 1362 00f2 4D4D 432F 		.string	"MMC/SD initialization failed\r\n"
 1362      5344 2069 
 1362      6E69 7469 
 1362      616C 697A 
 1362      6174 696F 
 1451               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 SDCardManager.c
     /tmp/cc6RPho9.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cc6RPho9.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cc6RPho9.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cc6RPho9.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cc6RPho9.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc6RPho9.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc6RPho9.s:19     .text.SDCardManager_ReadBlockHandler:0000000000000000 SDCardManager_ReadBlockHandler
     /tmp/cc6RPho9.s:217    .text.SDCardManager_WriteBlockHandler:0000000000000000 SDCardManager_WriteBlockHandler
     /tmp/cc6RPho9.s:401    .text.SDCardManager_Init:0000000000000000 SDCardManager_Init
     /tmp/cc6RPho9.s:1361   .progmem.data:00000000000000f2 __c.2638
     /tmp/cc6RPho9.s:1357   .progmem.data:00000000000000d7 __c.2644
     /tmp/cc6RPho9.s:1320   .bss:0000000000000031 fs
     /tmp/cc6RPho9.s:1353   .progmem.data:00000000000000bb __c.2646
     /tmp/cc6RPho9.s:1325   .bss:0000000000000033 dd
     /tmp/cc6RPho9.s:1349   .progmem.data:000000000000009b __c.2649
     /tmp/cc6RPho9.s:546    .text.UMeter_Init:0000000000000000 UMeter_Init
     /tmp/cc6RPho9.s:1345   .progmem.data:0000000000000085 __c.2655
     /tmp/cc6RPho9.s:611    .text.UMeter_Task:0000000000000000 UMeter_Task
     /tmp/cc6RPho9.s:1341   .progmem.data:0000000000000078 __c.2665
     /tmp/cc6RPho9.s:1337   .progmem.data:0000000000000063 __c.2668
     /tmp/cc6RPho9.s:1333   .progmem.data:000000000000004b __c.2673
     /tmp/cc6RPho9.s:1329   .progmem.data:0000000000000033 __c.2678
     /tmp/cc6RPho9.s:901    .text.SDCardManager_GetNbBlocks:0000000000000000 SDCardManager_GetNbBlocks
     /tmp/cc6RPho9.s:1309   .bss:0000000000000010 CachedTotalBlocks
     /tmp/cc6RPho9.s:1319   .bss:0000000000000014 disk_info
     /tmp/cc6RPho9.s:1323   .progmem.data:0000000000000016 __c.2699
     /tmp/cc6RPho9.s:977    .text.SDCardManager_WriteBlocks:0000000000000000 SDCardManager_WriteBlocks
     /tmp/cc6RPho9.s:1317   .progmem.data:000000000000000b __c.2712
                             .bss:0000000000000000 Buffer
     /tmp/cc6RPho9.s:1136   .text.SDCardManager_ReadBlocks:0000000000000000 SDCardManager_ReadBlocks
     /tmp/cc6RPho9.s:1313   .progmem.data:0000000000000000 __c.2731
     /tmp/cc6RPho9.s:1296   .text.SDCardManager_CheckDataflashOperation:0000000000000000 SDCardManager_CheckDataflashOperation

UNDEFINED SYMBOLS
Endpoint_WaitUntilReady
IsMassStoreReset
printf_P
sd_raw_init
sd_raw_read
sd_raw_read_interval
sd_raw_write
sd_raw_write_interval
partition_open
fat_open
fat_get_dir_entry_of_path
fat_open_dir
fat_create_file
strcmp
fat_reset_dir
fat_open_file
fat_read_dir
fat_read_file
printf
select_sensor
adc_conversion
__floatunsisf
__mulsf3
__divsf3
__addsf3
float2str
fat_write_file
puts
fat_close_file
sd_raw_get_info
__lshrdi3
__do_copy_data
__do_clear_bss
